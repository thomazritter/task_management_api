openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API for collaborative task management.
servers:
  - url: /api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        assignedTo:
          type: integer
        status:
          type: string
paths:
  /users:
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        500:
          description: Failed to create user
  /users/{id}:
    get:
      summary: Get user by ID
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
    put:
      summary: Update user
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: User updated
        404:
          description: User not found
    delete:
      summary: Delete user
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User deleted successfully
        404:
          description: User not found
  /tasks:
    post:
      summary: Create a new task
      tags: [Tasks]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                assignedTo:
                  type: integer
                status:
                  type: string
      responses:
        201:
          description: Task created successfully
        500:
          description: Failed to create task
    get:
      summary: Get tasks by user
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: assignedTo
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of tasks
        500:
          description: Failed to fetch tasks
  /tasks/{id}:
    get:
      summary: Get task by ID
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task found
        404:
          description: Task not found
    put:
      summary: Update task
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
      responses:
        200:
          description: Task updated
        404:
          description: Task not found
    delete:
      summary: Delete task
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Task deleted successfully
        404:
          description: Task not found
  /auth/login:
    post:
      summary: Login and get JWT token
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful, returns JWT token
        401:
          description: Invalid credentials
        500:
          description: Failed to login
  /auth/logout:
    post:
      summary: Logout
      tags: [Auth]
      responses:
        200:
          description: Successfully logged out
  /health:
    get:
      summary: Health check
      tags: [Health]
      responses:
        200:
          description: API is running
